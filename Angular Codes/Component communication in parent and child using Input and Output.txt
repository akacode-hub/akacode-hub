Component Communication

Component communication between parent and child using input and output statements

Create 2 components Child and parent

****************child******************

****child.component.html****

<h3>Child Component</h3>

<label>Child Component  </label>
<input type="text" #ccomponent (keyup)="onChange(ccomponent.value)"/>

<p>Value of parent component is:{{PData}}</p>


****child.component.ts****

import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';

@Component({
  selector: 'app-child',
  templateUrl: './child.component.html',
  styleUrls: ['./child.component.css']
})
export class ChildComponent implements OnInit {
  @Input() PData:number;
  @Output() childEvent=new EventEmitter();


  constructor() { }
  onChange(value){
    this.childEvent.emit(value);
  }
  ngOnInit() {
  }

}



************************parent************************

****parent.component.html****

<h3>Parent Component</h3>
<label>Parent Component </label>
<input type="text" #pcomponent (keyup)="0">

<p>Value of child component is: {{CData}}</p>
<app-child [PData]="pcomponent.value" 
(childEvent)="CData=$event"></app-child>



****parent.component.ts****

import { Component, OnInit } from '@angular/core';

@Component({
  selector: 'app-parent',
  templateUrl: './parent.component.html',
  styleUrls: ['./parent.component.css']
})
export class ParentComponent implements OnInit {
  public CData:number;
  constructor() { }

  ngOnInit() {
  }

}


****app.component.html****

<app-parent></app-parent>
<app-child></app-child>