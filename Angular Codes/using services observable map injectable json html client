Store the file under the assets folder

Data.json flile

{

  "result":[ // name of the object that we make

      {

          "id":"1",

          "name":"RDJ",

          "movies":"100"

      },

      {

          "id":"2",

          "name":"Tom Holland",

          "movies":"3"

      },

      {

          "id":"3",

          "name":"Benedict Cumberbatch",

          "movies":"10"

      },

      {

          "id":"4",

          "name":"Cris Hemsworth",

          "movies":"30"

      },

      {

          "id":"5",

          "name":"Cris Evans",

          "movies":"20"

      },

      {

        "id":"6",

        "name":"king kong",

        "movies":"45"

    }

  ]

}

 

Index file

<!doctype html>

<html lang="en">

<head>

  <meta charset="utf-8">

  <title>Myproject</title>

  <base href="/">

  <meta name="viewport" content="width=device-width, initial-scale=1">

  <link rel="icon" type="image/x-icon" href="favicon.ico">

  <link rel="stylesheet" type="text/css" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" />

</head>

<body>

  <app1-root></app1-root>

</body>

</html>

 

Use the npm install –g json-server

And the see it in json-server –watch data.json --------------------------------------------------use these commands to see the data of json file on the server

 

 

**********OUTPUT OF ABOVE COMMAND******************************************************

 

Microsoft Windows [Version 10.0.15063]

(c) 2017 Microsoft Corporation. All rights reserved.

 

C:\Users\806878\Desktop\ANGULAR PROJECT\myproject>code .

 

C:\Users\806878\Desktop\ANGULAR PROJECT\myproject>npm install -g json-server

C:\Users\806878\AppData\Roaming\npm\json-server -> C:\Users\806878\AppData\Roaming\npm\node_modules\json-server\lib\cli\bin.js

+ json-server@0.15.1

added 237 packages from 128 contributors in 41.984s

 

C:\Users\806878\Desktop\ANGULAR PROJECT\myproject>json-server --watch data.json

 

  \{^_^}/ hi!

 

  Loading data.json

  Oops, data.json doesn't seem to exist

  Creating data.json with some default data

 

  Done

 

  Resources

  http://localhost:3000/posts

  http://localhost:3000/comments

  http://localhost:3000/profile

 

  Home

  http://localhost:3000

 

  Type s + enter at any time to create a snapshot of the database

  Watching...

 

s +

^CTerminate batch job (Y/N)? Y

 

C:\Users\806878\Desktop\ANGULAR PROJECT\myproject>json-server --watch data.json

 

  \{^_^}/ hi!

 

  Loading data.json

  Done

 

  Resources

  http://localhost:3000/result

 

  Home

  http://localhost:3000

 

  Type s + enter at any time to create a snapshot of the database

  Watching...

 

GET /db 200 3.461 ms - 423

GET /__rules 404 1.771 ms - 2

GET /result 200 7.372 ms - 355

GET /result 304 2.386 ms - -

GET /result 304 26.436 ms - -

GET /result 304 26.574 ms - -

GET /result 304 28.336 ms - -

GET /result 304 2.844 ms - -

GET /result 304 2.941 ms - -

GET /result 304 3.422 ms - -

GET /result 304 2.440 ms - -

GET /result 304 2.055 ms - -

GET /result 304 3.190 ms - -

GET /result 304 1.867 ms - -

GET /result 304 4.046 ms - -

GET /result 304 4.286 ms - -

GET /result 304 2.489 ms - -

GET /result 304 2.429 ms - -

GET /result 304 2.346 ms - -

GET /result 304 2.003 ms - -

GET /result 304 4.495 ms - -

GET /result 304 2.690 ms - -

GET /result 304 3.336 ms - -

GET /result 304 4.580 ms - -

GET /result 304 12.308 ms - -

GET /result 304 2.899 ms - -

GET /result 304 4.821 ms - -

GET /result 304 1.879 ms - -

GET /result 304 1.771 ms - -

GET /result 304 2.453 ms - -

GET /result 304 2.747 ms - -

GET /result 304 2.960 ms - -

GET /result 304 3.510 ms - -

GET /result 304 2.302 ms - -

GET /result 304 3.866 ms - -

GET /result 304 3.885 ms - -

GET /result 304 2.735 ms - -

GET /result 304 2.987 ms - -

GET /result 304 4.212 ms - -

GET /result 304 2.562 ms - -

GET /result 304 14.904 ms - -

GET /result 304 2.601 ms - -

GET /result 304 2.052 ms - -

GET /result 304 3.309 ms - -

GET /result 304 3.789 ms - -

GET /result 304 2.224 ms - -

GET /result 304 5.699 ms - -

GET /result 304 4.528 ms - -

GET /result 304 2.801 ms - -

GET /result 304 3.199 ms - -

GET /result 304 2.882 ms - -

GET /result 304 3.264 ms - -

GET /result 304 4.634 ms - -

GET /result 304 2.013 ms - -

GET /result 304 2.580 ms - -

GET /result 304 3.168 ms - -

GET /result 304 3.647 ms - -

GET /result 304 3.676 ms - -

GET /result 304 2.909 ms - -

GET /result 304 2.520 ms - -

GET /result 304 3.109 ms - -

 

 

MAKE IUser.ts  file in the project folder

Its an interface

export interface IUser{

    id:Number;

    name:String;

    movies:Number;

}

 

Make user.services.ts a file in the project folder using command ************* ng g s user

import { Injectable } from '@angular/core';

import {HttpClient }from '@angular/common/http';

import {map} from 'rxjs/operators';

import {Observable} from 'rxjs';

 

@Injectable({

  providedIn: 'root'

})

export class UserService {

 

  constructor(private http:HttpClient) { }

  //protected url ='http://localhost:3000';

  getUsers():Observable<any>{

    return this

              .http

              .get("http://localhost:3000/result")

              .pipe(

               map(res=>res)

              );

             

  }

}

 

 

App.module.ts

import { BrowserModule } from '@angular/platform-browser';

import { NgModule } from '@angular/core';

import {FormsModule} from "@angular/forms";

import { AppComponent } from './app.component';

import { AboutComponent } from './about/about.component';

import { ContractComponent } from './contract/contract.component';

import { MyformComponent } from './myform/myform.component';

import { RegisterformComponent } from './registerform/registerform.component';

import { ReactiveFormsModuleComponent } from './reactive-forms-module/reactive-forms-module.component';

import { ReactiveFormsModule } from '@angular/forms';

import { AngularFontAwesomeModule} from 'angular-font-awesome';

import { AppchildComponent } from './appchild/appchild.component';

import { ParentComponent } from './parent/parent.component';

import { ChildComponent } from './child/child.component';

import { HttpClientModule } from '@angular/common/http';

 

@NgModule({

  declarations: [

    AppComponent,

    AboutComponent,

    ContractComponent,

    MyformComponent,

    RegisterformComponent,

    ReactiveFormsModuleComponent,

    AppchildComponent,

    ParentComponent,

    ChildComponent

  ],

  imports: [

    BrowserModule,

    FormsModule,

    ReactiveFormsModule,

    AngularFontAwesomeModule,

    HttpClientModule,

   

   ],

  providers: [],

  bootstrap: [AppComponent],

})

export class AppModule { }

 

 

app.component.ts

import { Component,OnInit } from '@angular/core';

import{AppchildComponent} from './appchild/appchild.component';

 

import {UserService} from'./user.service';

import{IUser} from './IUser';

import{Observable} from 'rxjs';

 

@Component({

  selector: 'app1-root',

  templateUrl: './app.component.html',

  styleUrls: ['./app.component.css']

})

export class AppComponent implements OnInit{

  protected title='app';

  protected userss$:Observable<IUser[]>;

constructor(public userservice:UserService){}

 

ngOnInit(){

   this.userservice.getUsers().subscribe(res=>{

     this.userss$=res;

   });

}

}

 

 





App.component.html

 

<!--<app-contract></app-contract>-->

<!--<app-myform></app-myform>-->

<!--<app-registerform></app-registerform>-->

<!--<app-reactive-forms-module></app-reactive-forms-module>-->

 

<!--<app-parent></app-parent>

<app-child></app-child>-->

<!--<table>

    <tr>

        <th>ID</th>

        <th>Name</th>

    </tr>

    <tr *ngFor="let coin of coins">

        <td>{{coin.id}}</td>

        <td>{{coin.name}}</td>

    </tr>

</table>-->

<table class="table table-striped table-dark">

    <thead>

        <tr>

            <th  scope="col">ID</th>

            <th  scope="col">Name</th>

            <th  scope="col">Movies</th>

        </tr>

    </thead>

    <tbody>

        <tr *ngFor="let user of userss$">

          

            <td>{{ user.id }}</td>

            <td>{{ user.name }}</td>

            <td>{{ user.movies }}</td>

        </tr>

    </tbody>

</table>




     

   

 

  

 
