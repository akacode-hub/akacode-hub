Template registration form using bootstrap, font awesome, and angular validation

It also displays data by fetching it from the json

Created new component register

created new file user.interface.ts

****user.interface.ts****

export interface User{
    name:string;
    mail:string;
    gender:string;
    designation:string;
    remarks:string;
}


****register.component.ts****

import { Component, OnInit } from '@angular/core';
import { User } from './user.interface';

@Component({
  selector: 'app-register',
  templateUrl: './register.component.html',
  styleUrls: ['./register.component.css']
})
export class RegisterComponent implements OnInit {

  constructor() { }
  public user:User
  ngOnInit() {
    this.user={
      name:"",
      mail:"",
      gender:"",
      designation:"",
      remarks:"",
    };
  }
  save(model:User, isValid:boolean){
    console.log(model,isValid);
  }
}


****register.component.html****

<div class="container">
    <h2>Registration Form</h2>
    <br>
    <form #f="ngForm" novalidate (ngSubmit)="save(f.value,f.valid)">
        <div class="form-group">
            <label class="fa fa-user-circle">  Name</label>
            <input type="text" placeholder="Enter Your Name" class="form-control" name="name" [(ngModel)]="user.name" #name="ngModel" required minlength="5">
            <small [hidden]="name.valid || (name.pristine && !f.submitted)" class="text-danger">
            Name is required (minimum 5 characters).
            </small>
        </div>
        <div class="form-group">
            <label class="fa fa-envelope">  Email</label>
            
            <input type="text" placeholder="Enter Your Email " ngModel [email]="true" class="form-control" name="mail" [(ngModel)]="user.mail" #mail="ngModel" required>
            
            <small [hidden]="mail.valid || (mail.pristine && !f.submitted)" class="text-danger">
            Email is required (Please use proper format i.e. xyz@site.com).
            </small>
        </div>
        <label class="fa fa-mars">  Gender</label><br>
        <label class="radio-inline">
            <input type="radio" name="optradio" name="gender" [(ngModel)]="user.gender" #name="ngModel" value="Male" checked>Male
        </label>
        <br>
        <label class="radio-inline">
            <input type="radio" name="optradio" name="gender" [(ngModel)]="user.gender" #name="ngModel" value="Female" checked>Female
        </label>
        <br>
        <div class="form-group">
            <label for="sel1" class="fa fa-trophy">  Designation (select one):</label>
            <select class="form-control" id="sel1" name="designation" [(ngModel)]="user.designation" #name="ngModel">
              <option>Trainee Engineer</option>
              <option>Programmer Analyst</option>
              <option>Software Engineer</option>
              <option>Project Lead</option>
              <option>Project Manager</option>
            </select>
            </div>
            <div class="form-group">
                <label class="fa fa-pencil">  Remarks</label>
                <input type="text" placeholder="Enter Your Remarks" class="form-control" name="remarks" [(ngModel)]="user.remarks" #name="ngModel">
                </div>
            <button type="button" class="btn btn-primary">Submit</button>
            <br><br>
            Registration Details:
            {{f.value|json}}  
        </form>
        </div> 