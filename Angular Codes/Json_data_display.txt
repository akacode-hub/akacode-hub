The following codes shows how we create database in json and display it on our webpage using services:


How to use json server:

Install and start json server:
npm install -g json-server
json-srver --watch data.json

write ng g s user --spec=false 
to create user.service.ts file



****user.service.ts****

import { Injectable } from '@angular/core';
import {HttpClient} from '@angular/common/http';
import {map} from 'rxjs/operators';
import {Observable} from 'rxjs';

@Injectable({
  providedIn: 'root'
})
export class UserService {

  constructor(private http:HttpClient) { }

  //protected url='http://localhost:4200/results';

  getUsers():Observable<any>{
    return this
    .http
    .get("http://localhost:3000/results")
    .pipe(
      map(res=>res)
    );
  }
}


Create interface called IUser.ts

****IUser.ts****

export interface IUser{
    id:Number;
    name:string;
    movies:Number;
}


Create data.json file in assets folder

****data.json****

{
    "results":[
        {
            "id":"1",
            "name":"RDJ",
            "movies":"100"
        },
        {
            "id":"2",
            "name":"Tom Holland",
            "movies":"3"
        },
        {
            "id":"3",
            "name":"Benedict Cumberbatch",
            "movies":"10"
        },
        {
            "id":"4",
            "name":"Chris Hemsworth",
            "movies":"100"
        },
        {
            "id":"5",
            "name":"Chris Evans",
            "movies":"20"
        }
  
    ]
  }
  

****app.module.ts****

import { BrowserModule } from '@angular/platform-browser';
import { NgModule } from '@angular/core';
import {FormsModule} from "@angular/forms";
import { AppComponent } from './app.component';
import { AboutComponent } from './about/about.component';
import { AngularFontAwesomeModule } from 'angular-font-awesome';
import { ContactComponent } from './contact/contact.component';
import { MyFormComponent } from './my-form/my-form.component';
import { RegisterComponent } from './register/register.component';
import { ReactiveFormsModule } from '@angular/forms';
import { UserReactComponent } from './user-react/user-react.component';
import { AppChildComponent } from './app-child/app-child.component';
import { ParentComponent } from './parent/parent.component';
import { ChildComponent } from './child/child.component';
import {CryptoService} from './crypto.service';
import {HttpClientModule} from '@angular/common/http';





@NgModule({
  declarations: [
    AppComponent,
    AboutComponent,
    ContactComponent,
    MyFormComponent,
    RegisterComponent,
    UserReactComponent,
    AppChildComponent,
    ParentComponent,
    ChildComponent
  ],
  imports: [
    BrowserModule,
    FormsModule,
    AngularFontAwesomeModule,
    ReactiveFormsModule,
    HttpClientModule,
    
   
    
  ],
  providers: [],
  bootstrap: [AppComponent]
})
export class AppModule { }



****app.component.ts****

import { Component, OnInit} from '@angular/core';
import {AppChildComponent} from './app-child/app-child.component';
import {CryptoService} from './crypto.service';
import {IUser} from './IUser';
import {Observable} from 'rxjs';
import { UserService } from './user.service';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent implements OnInit{
  //appTitle:string = 'Simple Calculator';
  //maths=0;
  //eng=0;
  //hindi=0;
 // message:string="I am Parent";
  //childmessage:string="I am passed from Parent to Child component";

  //coins=[];
  //constructor(private cryptoservice:CryptoService)
  //{
    //this.coins=cryptoservice.getMyItems();
  //}
  protected title='app';
  protected users$: Observable<IUser[]>;

  constructor(public userservice: UserService){}

  ngOnInit(){
    this.userservice.getUsers().subscribe(res=>{
      this.users$=res;
     });
   }

}


****app.component.html****

<table class="table table-sm">
  <thead class="thead-dark">
    <tr>
      <th>ID</th>
      <th>Name</th>
      <th>Movies</th>
    </tr>
  </thead>
  <tbody>
    <tr *ngFor="let user of users$">
      <td>{{user.id}}</td>
      <td>{{user.name}}</td>
      <td>{{user.movies}}</td>
    </tr>
  </tbody>
</table>






